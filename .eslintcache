[{"D:\\Project\\fyp_webapp\\frontend\\src\\App.js":"1","D:\\Project\\fyp_webapp\\frontend\\src\\index.js":"2","D:\\Project\\fyp_webapp\\frontend\\src\\reportWebVitals.js":"3","D:\\Project\\fyp_webapp\\frontend\\src\\Components\\SectionComponent.js":"4","D:\\Project\\fyp_webapp\\frontend\\src\\Components\\QuestionButton.js":"5"},{"size":978,"mtime":1610732367538,"results":"6","hashOfConfig":"7"},{"size":500,"mtime":1610642054994,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1610642054994,"results":"9","hashOfConfig":"7"},{"size":3697,"mtime":1610732370950,"results":"10","hashOfConfig":"7"},{"size":3110,"mtime":1610732400404,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hsm14o",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"D:\\Project\\fyp_webapp\\frontend\\src\\App.js",[],"D:\\Project\\fyp_webapp\\frontend\\src\\index.js",[],["24","25"],"D:\\Project\\fyp_webapp\\frontend\\src\\reportWebVitals.js",[],"D:\\Project\\fyp_webapp\\frontend\\src\\Components\\SectionComponent.js",["26","27","28"],"D:\\Project\\fyp_webapp\\frontend\\src\\Components\\QuestionButton.js",["29","30","31","32"],"import react, {Component} from \"react\"\r\nimport {Button} from \"reactstrap\"\r\nimport \"./index.css\"\r\n\r\n\r\nexport default class QuestionButton extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            hierarchy : props.hierarchy,\r\n            ancestor : props.ancestor,\r\n            isExpanded : false,\r\n            isVisible : props.isVisible,\r\n            qno : props.qno,\r\n            width : props.width,\r\n            isChild : false\r\n        }\r\n\r\n        if(Object.keys(this.state.hierarchy).length==0) {\r\n            this.state.isChild = true;\r\n        }\r\n        this.reduceWidth = this.reduceWidth.bind(this);\r\n        this.renderChildButtons = this.renderChildButtons.bind(this);\r\n        this.handleButtonClick = this.handleButtonClick.bind(this);\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        \r\n        if(nextProps.isVisible!=prevState.isVisible){\r\n            return {\r\n                hierarchy : prevState.hierarchy,\r\n                ancestor : prevState.ancestor,\r\n                isExpanded : false,\r\n                isVisible : nextProps.isVisible,\r\n                qno : prevState.qno,\r\n                width : prevState.width\r\n            }\r\n        }\r\n\r\n        return null\r\n    }\r\n\r\n    reduceWidth(width){\r\n        return \"60%\"\r\n        switch(width){\r\n            case \"50%\":\r\n                return \"45%\"\r\n            case \"45%\":\r\n                return \"35%\"\r\n            default : \r\n                return \"25%\"\r\n        }\r\n    }\r\n\r\n    renderChildButtons(){\r\n        console.log(\"renderchildbuttons called\")\r\n        console.log(this.state)\r\n        var children = Object.keys(this.state.hierarchy);\r\n\r\n        if(children.length===0) {\r\n            return null;\r\n        }\r\n\r\n        return children.map(subquestion=>{\r\n            return <QuestionButton \r\n                hierarchy = {this.state.hierarchy[subquestion]}\r\n                ancestor = {this.state.ancestor + this.state.qno}\r\n                isVisible = {this.state.isExpanded}\r\n                qno = {subquestion}\r\n                width = {this.reduceWidth(this.state.width)}\r\n            />\r\n        })\r\n    }\r\n\r\n    handleButtonClick(event){\r\n        // if(this.state.isChild==true)\r\n        //     window.alert(this.state.ancestor+this.state.qno);\r\n        this.setState((prevState)=>{\r\n            return ({\r\n            isExpanded : !prevState.isExpanded\r\n            })\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div style={{ display : \"flex\" , flexDirection : \"column\" , flexWrap : \"wrap\" ,alignContent : \"flex-end\"}}>\r\n                {this.state.isVisible&&\r\n                    <Button\r\n                        className = \"sectionbtn\"\r\n                        color=\"secondary\"   \r\n                        style={{ width : this.state.width}}\r\n                        onClick={this.handleButtonClick}\r\n                        >\r\n                        {this.state.qno}\r\n                    </Button>\r\n                }   \r\n                {this.renderChildButtons()}\r\n            </div>\r\n        )\r\n    }\r\n}",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":1,"column":8,"nodeType":"39","messageId":"40","endLine":1,"endColumn":13},{"ruleId":"41","severity":1,"message":"42","line":63,"column":27,"nodeType":"43","messageId":"44","endLine":63,"endColumn":29},{"ruleId":"45","severity":1,"message":"46","line":72,"column":29,"nodeType":"47","endLine":77,"endColumn":35},{"ruleId":"37","severity":1,"message":"38","line":1,"column":8,"nodeType":"39","messageId":"40","endLine":1,"endColumn":13},{"ruleId":"41","severity":1,"message":"42","line":20,"column":52,"nodeType":"43","messageId":"44","endLine":20,"endColumn":54},{"ruleId":"41","severity":1,"message":"48","line":30,"column":31,"nodeType":"43","messageId":"44","endLine":30,"endColumn":33},{"ruleId":"49","severity":1,"message":"50","line":46,"column":9,"nodeType":"51","messageId":"52","endLine":53,"endColumn":10},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Expected '!==' and instead saw '!='.","no-unreachable","Unreachable code.","SwitchStatement","unreachableCode","no-global-assign","no-unsafe-negation"]