# Generated by Django 3.1.5 on 2021-01-13 08:19

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('offering_dept', models.CharField(max_length=50, null=True)),
                ('course_id', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True)),
                ('email', models.EmailField(max_length=50, null=True)),
                ('department', models.CharField(max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(null=True)),
                ('consolidated_marksheet', models.FileField(null=True, upload_to='uploads/testMarksheets/')),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='assisted_grading.course')),
            ],
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answerscript_pdf', models.FileField(null=True, upload_to='uploads/submissions/')),
                ('submission_time', models.DateTimeField(null=True)),
                ('status', models.IntegerField(null=True)),
                ('test', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='assisted_grading.test')),
            ],
        ),
        migrations.CreateModel(
            name='QpNode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_number', models.CharField(max_length=50, null=True)),
                ('max_marks', models.IntegerField(null=True)),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='assisted_grading.qpnode')),
                ('test', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='assisted_grading.test')),
            ],
        ),
        migrations.CreateModel(
            name='GradeNode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('awarded_marks', models.IntegerField(null=True)),
                ('remarks', models.CharField(max_length=100, null=True)),
                ('status', models.IntegerField(null=True)),
                ('segmentation_image', models.FileField(null=True, upload_to='uploads/segmentation_images/')),
                ('processed_image', models.FileField(null=True, upload_to='uploads/processed_images/')),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='assisted_grading.gradenode')),
                ('question', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='assisted_grading.qpnode')),
                ('submission', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='assisted_grading.submission')),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='professor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='assisted_grading.professor'),
        ),
    ]
